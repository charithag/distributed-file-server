/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.dc.file.search.ui;

import org.dc.file.search.MessageUtils;
import org.dc.file.search.Peer;
import org.dc.file.search.SearchRequest;
import org.dc.file.search.SearchResult;
import org.dc.file.search.Store;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.swing.*;
import org.apache.commons.lang.RandomStringUtils;

/**
 *
 * @author rasikaperera
 */
public class DashboardForm extends javax.swing.JFrame {

    private Peer localPeer;
    private String uuid;

    /**
     * Creates new form Dashboard
     */
    public DashboardForm() {
        initComponents();
        DefaultListModel model = new DefaultListModel();
        model.addElement("Search result is empty");
        lstSearchResult.setModel(model);
        uuid = RandomStringUtils.randomAlphanumeric(8);
        try {
            localPeer = MessageUtils.init(uuid);
        } catch (IOException e) {
            System.out.println("Error occurred while initializing peer");
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Peer initialization failed!", "Error Occurred!",
                                          JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtSearchKey = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstSearchResult = new javax.swing.JList<>();
        btnPeersList = new javax.swing.JButton();
        btnMoviesList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Movie Name:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lstSearchResult.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstSearchResult);

        btnPeersList.setText("Peers List");
        btnPeersList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPeersListActionPerformed(evt);
            }
        });

        btnMoviesList.setText("My Movies List");
        btnMoviesList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoviesListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearchKey)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addGap(65, 65, 65))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMoviesList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPeersList)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel1)
                    .addComponent(txtSearchKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPeersList)
                    .addComponent(btnMoviesList))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        Store store = Store.getInstance();
        String key = txtSearchKey.getText();
        SearchRequest searchRequest = new SearchRequest(Calendar.getInstance().getTimeInMillis(),
                                                        key, 2, localPeer);
        store.setMySearchRequest(searchRequest);
        store.addSearchRequest(searchRequest);
        store.setSearchResults(new ArrayList<>());
        List<String> results = Store.getInstance().findInFiles(searchRequest.getSearchKey());
        if (!results.isEmpty()) {
            SearchResult searchResult = new SearchResult(key, localPeer, 0, results);
            store.addSearchResult(searchResult);
        }
        for (Map.Entry<String, Peer> entry : Store.getInstance().getPeerMap().entrySet()) {
            Peer peer = entry.getValue();
            MessageUtils.sendUDPMessage(peer.getIp(),
                                        peer.getPort(),
                                        "SER " + localPeer.getIp() + " " + localPeer.getPort()
                                                + " \"" + key + "\" 2");
        }
        Runnable resultTask = () -> Store.getInstance().displaySearchResults();
        int delay = 5;
        ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor();
        scheduler.schedule(resultTask, delay, TimeUnit.SECONDS);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        performExit();
    }//GEN-LAST:event_formWindowClosing

    private void btnPeersListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new PeersListForm().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnMoviesListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new MyMoviesListForm().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void performExit(){
        Store store = Store.getInstance();
        for (Map.Entry<String, Peer> entry : Store.getInstance().getPeerMap().entrySet()) {
            Peer peer = entry.getValue();
            MessageUtils.sendUDPMessage(peer.getIp(),
                                        peer.getPort(),
                                        "LEAVE " + localPeer.getIp() + " " + localPeer.getPort());
        }
        MessageUtils.sendTCPMessage(store.getServerIp(),
                                    store.getServerPort(),
                                    "UNREG " + localPeer.getIp() + " " + localPeer.getPort() + " " + uuid);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnPeersList;
    private javax.swing.JButton btnMoviesList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstSearchResult;
    private javax.swing.JTextField txtSearchKey;
    // End of variables declaration//GEN-END:variables
}
